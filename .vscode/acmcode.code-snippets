{
	"POJ": {
		"prefix": "POJ",
		"body": [
			"#include<stdlib.h>",
			"#include<algorithm>",
			"#include<iostream>",
			"#include<cstring>",
			"#include<string>",
			"#include<vector>",
			"#include<bitset>",
			"#include<queue>",
			"#include<stack>",
			"#include<map>",
			"#include<set>",
			"#include<cmath>"
		],
		"description": "POJ"
	},
	"MAIN": {
		"prefix": "MAIN",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define IOS ios::sync_with_stdio(0);cout.tie(0);",
			"#define int long long",
			"typedef long long ll;",
			"typedef pair<int,int> P;",
			"const int N=1e6+7;",
			"const int INF=0x3f3f3f3f3f3f3f3f;",
			"const int mod=998244353;",
			"void solve()",
			"{",
			"\t$0",
			"}",
			"signed main()",
			"{",
			"\t//IOS",
			"\tint __=1;",
			"\t//cin >> __;",
			"\twhile (__--)",
			"\t\tsolve();",
			"}"
		],
		"description": "MAIN"
	},
	"DINIC": {
		"prefix": "DINIC",
		"body": [
			"struct Edge{",
			"\tint to,next,w;",
			"}e[N];",
			"int head[N],cnt=1,tot;",
			"int dep[N];",
			"int n,m,s,t;",
			"void init(){",
			"\tcnt=1;",
			"\tmemset(head+1,0,sizeof(int)*tot);",
			"}",
			"void add(int from,int to,int w)",
			"{",
			"\te[++cnt].w=w;",
			"\te[cnt].to=to;",
			"\te[cnt].next=head[from];",
			"\thead[from]=cnt;",
			"}",
			"void add_ed(int x,int y,int w,int rw=0)",
			"{",
			"\tadd(x,y,w);",
			"\tadd(y,x,rw);",
			"}",
			"bool bfs(int s,int t)",
			"{",
			"\tmemset(dep+1,0,sizeof(int)*tot);",
			"\tqueue<int>q;",
			"\tdep[s]=1;",
			"\tq.push(s);",
			"\twhile(!q.empty())",
			"\t{",
			"\t\tint x=q.front();q.pop();",
			"\t\tif(x==t)return true;",
			"\t\tfor(int i=head[x];i;i=e[i].next)",
			"\t\t{",
			"\t\t\tint y=e[i].to;",
			"\t\t\tint w=e[i].w;",
			"\t\t\tif(dep[y]==0&&w>0)",
			"\t\t\t\tq.push(y),dep[y]=dep[x]+1;",
			"\t\t}",
			"\t}",
			"\treturn false;",
			"}",
			"int dfs(int x,int flow,int t)",
			"{",
			"\tif(x==t)return flow;",
			"\tint out=flow;",
			"\tfor(int i=head[x];i;i=e[i].next)",
			"\t{",
			"\t\tint y=e[i].to;",
			"\t\tint w=e[i].w;",
			"\t\tif(w!=0&&dep[y]==dep[x]+1)",
			"\t\t{",
			"\t\t\tint tmp=dfs(y,min(out,w),t);",
			"\t\t\te[i].w-=tmp;",
			"\t\t\te[i^1].w+=tmp;",
			"\t\t\tout-=tmp;",
			"\t\t\tif(!out)break;",
			"\t\t}",
			"\t}",
			"\tif(out==flow)dep[x]=0;",
			"\treturn flow-out;",
			"}",
			"int DINIC(int s,int t)",
			"{",
			"\tint ans=0;",
			"\twhile(bfs(s,t))",
			"\t\tans+=dfs(s,INF,t);",
			"\treturn ans;",
			"}"
		],
		"description": "DINIC"
	},
	"Edge": {
		"prefix": "Edge",
		"body": [
			"struct Edge",
			"{",
			"\tint to,next,w;",
			"}e[N];",
			"int head[N],cnt;",
			"void add(int from,int to,int w)",
			"{",
			"\te[++cnt].w=w;",
			"\te[cnt].to=to;",
			"\te[cnt].next=head[from];",
			"\thead[from]=cnt;",
			"}$0"
		],
		"description": "Edge"
	},
	"qksc": {
		"prefix": "qksc",
		"body": [
			"inline ll ksc(ll x,ll y){",
			"\tll res=0;",
			"\twhile(y){",
			"\t\tif(y&1)res=(res+x)%mod;",
			"\t\tx=(x<<1)%mod; y>>=1;",
			"\t}return res;",
			"}"
		],
		"description": "qksc"
	},
	"qpow": {
		"prefix": "qpow",
		"body": [
			"int qpow(ll a,ll n)",
			"{",
			"\tif(a%mod==0)return 0;",
			"\tll ans=1;",
			"\twhile(n){",
			"\t\tif(n&1){",
			"\t\t\tans=ans*a%mod;",
			"\t\t}",
			"\t\tn>>=1;",
			"\t\ta=a*a%mod;",
			"\t}",
			"\tans%=mod;",
			"\treturn ans;",
			"}"
		],
		"description": "qpow"
	},
	"qread": {
		"prefix": "qread",
		"body": [
			"inline int read()",
			"{",
			"    int x=0,f=1;char ch=getchar();",
			"    while(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch=getchar();}",
			"    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}",
			"    return x*f;",
			"}"
		],
		"description": "qread"
	},
	"qwrite": {
		"prefix": "qwrite",
		"body": [
			"inline void write(int x)",
			"{",
			"     if(x<0) putchar('-'),x=-x;",
			"     if(x>9) write(x/10);",
			"     putchar(x%10+'0');",
			"}"
		],
		"description": "qwrite"
	},
	"add_ed": {
		"prefix": "add_ed",
		"body": [
			"void add_ed(int x,int y,int w,int rw=0)",
			"{",
			"\tadd(x,y,w);",
			"\tadd(y,x,rw);",
			"}"
		],
		"description": "add_ed"
	},
	"MCMF": {
		"prefix": "MCMF",
		"body": [
			"struct node{",
			"\tint to,next,w,c;",
			"}e[N];",
			"int head[N],cnt=1,tot;",
			"int dis[N],flow[N],last[N];",
			"bitset<N>vis;",
			"int n,m,s,t;",
			"void init(){",
			"\tmemset(head+1,0,sizeof(int)*tot);",
			"\tcnt=1;",
			"\ttot=0;",
			"}",
			"void add(int from,int to,int w,int c)",
			"{",
			"\te[++cnt].w=w;",
			"\te[cnt].c=c;",
			"\te[cnt].to=to;",
			"\te[cnt].next=head[from];",
			"\thead[from]=cnt;",
			"}",
			"void add_mc(int x,int y,int w,int c,int rw=0)",
			"{",
			"\tadd(x,y,w,c);",
			"\tadd(y,x,rw,-c);",
			"}",
			"bool spfa(int s,int t)",
			"{",
			"\tmemset(dis+1,0x3f,sizeof(int)*tot);",
			"\tmemset(last+1,-1,sizeof(int)*tot);",
			"\tvis.reset();",
			"\tqueue<int>q;",
			"\tq.push(s);",
			"\tdis[s]=0;",
			"\tvis[s]=1;",
			"\tflow[s]=INF;",
			"\twhile(!q.empty())",
			"\t{",
			"\t\tint x=q.front();q.pop();",
			"\t\tvis[x]=0;",
			"\t\tfor(int i=head[x];i;i=e[i].next)",
			"\t\t{",
			"\t\t\tint y=e[i].to;",
			"\t\t\tint w=e[i].w;",
			"\t\t\tint c=e[i].c;",
			"\t\t\tif(w>0&&dis[y]>dis[x]+c)",
			"\t\t\t{",
			"\t\t\t\tdis[y]=dis[x]+c;",
			"\t\t\t\tlast[y]=i;",
			"\t\t\t\tflow[y]=min(flow[x],w);",
			"\t\t\t\tif(!vis[y])",
			"\t\t\t\t\tq.push(y),vis[y]=1;",
			"\t\t\t}",
			"\t\t}",
			"\t}",
			"\treturn last[t]!=-1;",
			"}",
			"void MCMF(int s,int t)",
			"{",
			"\tint maxf=0,minc=0;",
			"\twhile(spfa(s,t))",
			"\t{",
			"\t\tmaxf+=flow[t];",
			"\t\tminc+=flow[t]*dis[t];",
			"\t\tfor(int i=t;i!=s;i=e[last[i]^1].to)",
			"\t\t{",
			"\t\t\te[last[i]].w-=flow[t];",
			"\t\t\te[last[i]^1].w+=flow[t];",
			"\t\t}",
			"\t}",
			"\tcout<<maxf<<\" \"<<minc<<endl;",
			"}"
		],
		"description": "MCMF"
	}
}